#!/usr/bin/env python
#
# Usage:
#   get-accesses.py <filename> l1size [l2size [l3size]]
#   filename        - name of file to parse for total hit values
#   lNsize          - size of lN cache
#   Multiple levels are optional, but you must specify the smaller cache sizes 
#   to filter before hitting higher levels.

from argparse import ArgumentParser,FileType

parser = ArgumentParser(description='Process a Byfl cache dump to get access counts.')
parser.add_argument('filename', type=FileType('r'), help='Path to filename for processing.')
parser.add_argument('sizes', nargs='*', type=str, help='List of cache sizes. Must increase monotonically.')

args = vars(parser.parse_args())

lines = args['filename'].readlines()
#total hits
total = int(lines[0].split()[3])
#convert all size->hit mappings into a dict
vals = dict(line.split() for line in lines[2:])

accesses = [total] + [total - int(vals.get(size, total)) for size in args['sizes']]

print "\t".join([str(access) for access in accesses])
